repos:
  # Basic pre-commit hooks
  # These hooks check for common issues like trailing whitespace, end-of-file fixes, YAML validation, large files, and merge conflicts.
  # They help maintain code quality and prevent common mistakes in the codebase.
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: debug-statements

  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.401
    hooks:
      - id: pyright

  # Python code formatting and linting with Ruff
  # Ruff is a fast Python linter, formatter, and code analysis tool that can replace flake8, black, and isort.
  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.11.13
    hooks:
      # Run the linter.
      - id: ruff-check
        args: [--fix]
      # Run the formatter.
      - id: ruff-format

  # Your secret detection hook
  - repo: local
    hooks:
      - id: secret-detection
        name: Secret Detection Scanner
        entry: ./secret_detection_hook.sh
        language: script
        files: '\.(py|js|ts|jsx|tsx|json|yaml|yml|env|cfg|conf|config|ini|toml|sh|bash|zsh|fish|php|rb|go|java|scala|kt|cs|cpp|c|h|hpp|rs|swift|dart|sql|xml|html|css|scss|sass|tf|tfvars|hcl)$|^(Dockerfile|Makefile|Rakefile)$'
        exclude: '\.git/|\.secrets\.baseline|package-lock\.json|poetry\.lock|yarn\.lock|\.min\.js|\.map$'
        pass_filenames: true
        stages: [pre-commit]
  # Conventional commit message validation
  # This hook checks commit messages against the conventional commit format so that we can use semantic versioning dynamically.
  # It requires the commit message to start with a type (e.g., feat, fix, chore) followed by a scope and a description.
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v2.1.1
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
