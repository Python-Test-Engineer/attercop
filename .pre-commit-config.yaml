repos:
  # Basic pre-commit hooks
  # These hooks check for common issues like trailing whitespace, end-of-file fixes, YAML validation, large files, and merge conflicts.
  # They help maintain code quality and prevent common mistakes in the codebase.
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: debug-statements

  # # Python code formatting with black
  # - repo: https://github.com/psf/black
  #   rev: 23.3.0
  #   hooks:
  #     - id: black
  #       language_version: python3

  # # Python import sorting
  # - repo: https://github.com/pycqa/isort
  #   rev: 5.12.0
  #   hooks:
  #     - id: isort
  #       args: ["--profile", "black"]

  # # Python linting with flake8
  # - repo: https://github.com/pycqa/flake8
  #   rev: 6.0.0
  #   hooks:
  #     - id: flake8
  #       args: [--max-line-length=88, --extend-ignore=E203]

  # Python code formatting and linting with Ruff
  # Ruff is a fast Python linter, formatter, and code analysis tool that can replace flake8, black, and isort.
  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.11.13
    hooks:
      # Run the linter.
      - id: ruff-check
        args: [--fix]
      # Run the formatter.
      - id: ruff-format

  # Conventional commit message validation
  # This hook checks commit messages against the conventional commit format so that we can use semantic versioning dynamically.
  # It requires the commit message to start with a type (e.g., feat, fix, chore) followed by a scope and a description.
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v2.1.1
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
