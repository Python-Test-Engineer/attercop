name: CI/CD Pipeline
'on':
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: null
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.12'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: 'Set up Python ${{ matrix.python-version }}'
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'
      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: latest
      - name: Create virtual environment
        run: uv venv
      - name: Install dependencies
        run: |
          uv pip install -e .
          uv pip install pytest pytest-cov pytest-xdist
      - name: Run tests with pytest
        run: |
          source .venv/bin/activate
          pytest --cov=attercop --cov-report=xml --cov-report=term-missing -v
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: latest
      - name: Create virtual environment
        run: uv venv
      - name: Install dependencies
        run: |
          uv pip install -e .
          uv pip install bandit safety pip-audit
      - name: Run Bandit security scan
        run: |
          source .venv/bin/activate
          bandit -r attercop/ -f json -o bandit-report.json || true
          bandit -r attercop/ -f txt
        continue-on-error: true
      - name: Run Safety check
        run: |
          source .venv/bin/activate
          safety check --json --output safety-report.json || true
          safety check
        continue-on-error: true
      - name: Run pip-audit
        run: |
          source .venv/bin/activate
          pip-audit --format=json --output=pip-audit-report.json || true
          pip-audit
        continue-on-error: true
      - name: Upload security reports
        uses: actions/upload-artifact@v4#@v4 passes
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
            pip-audit-report.json
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
          queries: 'security-extended,security-and-quality'
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: latest
      - name: Create virtual environment
        run: uv venv
      - name: Install linting tools
        run: |
          uv pip install black isort flake8 mypy
      - name: Check code formatting with Black
        run: |
          source .venv/bin/activate
          black --check --diff attercop/
      - name: Check import sorting with isort
        run: |
          source .venv/bin/activate
          isort --check-only --diff attercop/
      - name: Lint with flake8
        run: >
          source .venv/bin/activate

          flake8 attercop/ --count --select=E9,F63,F7,F82 --show-source
          --statistics

          flake8 attercop/ --count --exit-zero --max-complexity=10
          --max-line-length=88 --statistics
      - name: Type check with mypy
        run: |
          source .venv/bin/activate
          mypy attercop/ || true
        continue-on-error: true
