name: Test Dependencies

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly to catch new dependency issues
    - cron: "0 0 * * 0"

jobs:
  test-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        # Test different dependency scenarios
        deps-scenario: ["latest", "minimal", "pre-release"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies - Latest
        if: matrix.deps-scenario == 'latest'
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Install dependencies - Minimal
        if: matrix.deps-scenario == 'minimal'
        run: |
          python -m pip install --upgrade pip
          # Install minimal versions specified in setup.py/pyproject.toml
          pip install -e . --constraint constraints-minimal.txt

      - name: Install dependencies - Pre-release
        if: matrix.deps-scenario == 'pre-release'
        run: |
          python -m pip install --upgrade pip
          pip install -e . --pre

      - name: Check dependency conflicts
        run: |
          pip check
          pip list --format=freeze > installed-packages.txt

      - name: Upload dependency list
        uses: actions/upload-artifact@v3
        with:
          name: dependencies-${{ matrix.python-version }}-${{ matrix.deps-scenario }}
          path: installed-packages.txt

      - name: Run tests
        run: |
          pytest tests/ -v

      - name: Test import compatibility
        run: |
          python -c "import sys; print(f'Python {sys.version}'); import your_package; print('Import successful')"

  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install safety and pip-audit
        run: |
          pip install safety pip-audit pipdeptree

      - name: Install project dependencies
        run: |
          pip install -e .

      - name: Check for security vulnerabilities
        run: |
          safety check
          pip-audit

      - name: Analyze dependency tree
        run: |
          pipdeptree --warn conflict
          pipdeptree --json > dependency-tree.json

      - name: Upload dependency analysis
        uses: actions/upload-artifact@v3
        with:
          name: dependency-analysis
          path: dependency-tree.json
